name: Create Nightly Release

on:
  schedule:
    - cron: '0 6 * * *'

jobs:
  build:
    name: Create Nightly Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    
    - name: Setup release directory
      run: |
        mkdir -p release/bin
        mkdir release/bin/windows
        mkdir release/bin/linux
        mkdir release/bin/macos

    - name: Build windows version
      run: |
        cd cmd/create-fself
        GOOS=windows go build -o ../../release/bin/windows/create-fself.exe -modfile=go-linux.mod

    - name: Build linux version
      run: |
        cd cmd/create-fself
        GOOS=windows go build -o ../../release/bin/windows/create-fself -modfile=go-linux.mod

    - name: Build macOS version
      run: |
        cd cmd/create-fself
        GOOS=windows go build -o ../../release/bin/macos/create-fself -modfile=go-linux.mod
    
    - name: Create tarball
      run: |
        cd release
        tar -czvf binaries.tar.gz bin/*

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
      with:
        tag_name: nightly
        release_name: Nightly Developmental Build
        body: |
          Automated build.
        draft: false
        prerelease: true

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/binaries.tar.gz
        asset_name: binaries.tar.gz
        asset_content_type: application/gzip
        
